<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<!-- 맵핑될 DAO 인터페이스의 Full name 을 줍니다. -->
<mapper namespace="com.common.www">

	<!-- goods -->

	<!-- goods 물품 토탈 출력 -->
	<select resultType="java.lang.Integer" id="selectTotalPaging">
		SELECT
		NVL(COUNT(*),0)FROM GOODS
	</select>

	<!-- 상품 리스트 출력 db -->
	<select id="getItem" resultType="com.common.www.dto.goodsDTO"
		parameterType="java.lang.String">
		SELECT GOODSNUMBER,
		GOODSNAME,
		PRICE,
		NOWSTOCK,
		TO_CHAR(
		INPUTGOODS , 'MM/DD/YYYY') AS INPUTGOODS ,
		TO_CHAR(
		OUTPUTGOODS ,
		'MM/DD/YYYY') AS OUTPUTGOODS,
		SOLDNUM,
		NEWITEM
		FROM GOODS
		WHERE STORECODE
		= #{storeCode}
	</select>

	<!-- select one goods -->
	<select id="getItemOne" resultType="com.common.www.dto.goodsDTO"
		parameterType="com.common.www.dto.goodsDTO">
		SELECT
		GOODSNUMBER,
		GOODSNAME,
		PRICE,
		NOWSTOCK,
		TO_CHAR(
		INPUTGOODS , 'MM/DD/YYYY') AS INPUTGOODS ,
		TO_CHAR( OUTPUTGOODS
		,'MM/DD/YYYY') AS OUTPUTGOODS,
		SOLDNUM,
		NEWITEM,
		CALORIE,
		RANKGOODS,
		GOODSINFO
		FROM
		GOODS
		WHERE
		GOODSNUMBER=#{goodsNumber}
		AND STORECODE=#{storeCode}
	</select>

	<!-- 상품 추가 db 식품() -->
	<insert id="insertGoodsFood"
		parameterType="com.common.www.dto.goodsDTO">
		INSERT INTO GOODS
		VALUE(GOODSNUMBER,GOODSNAME,PRICE,OUTPUTGOODS , STORECODE)
		VALUES(#{goodsNumber},#{goodsName},#{price},SYSDATE + 5 ,#{storeCode}
		)
	</insert>

	<!-- 상품 추가 db 통조림() -->
	<insert id="insertGoodsCan"
		parameterType="com.common.www.dto.goodsDTO">
		INSERT INTO GOODS
		VALUE(GOODSNUMBER,GOODSNAME,PRICE,OUTPUTGOODS , STORECODE)
		VALUES(#{goodsNumber},#{goodsName},#{price},SYSDATE +
		1000,#{storeCode} )
	</insert>


	<!-- 상품 삭제 -->
	<delete id="deleteGoods" parameterType="com.common.www.dto.goodsDTO">
		DELETE GOODS WHERE
		GOODSNUMBER =#{goodsNumber}
		AND STORECODE = #{storeCode}
	</delete>

	<!-- 상품 수정 -->
	<!-- TO_CHAR(TO_DATE(OUTPUTGOODS,'yyyy-mm-dd hh24:mi:ss'),'yyyy-mm-dd hh24:mi:ss') -->
	<update id="updateGoods"
		parameterType="com.common.www.dto.goodsDTO">
		UPDATE GOODS SET
		GOODSNAME = #{goodsName} , PRICE =
		#{price} ,NOWSTOCK = #{nowStock}, INPUTGOODS =TO_DATE( #{inputGoods},
		'MM/DD/YYYY')
		,OUTPUTGOODS =TO_DATE( #{outputGoods},
		'MM/DD/YYYY')
		,SOLDNUM =#{soldNum} , CALORIE
		=#{calorie} , GOODSINFO
		=#{goodsInfo}
		WHERE
		GOODSNUMBER =#{goodsNumber}
		AND STORECODE = #{storeCode}
	</update>

	<!-- -->


	<!-- store -->

	<!-- 점포 리스트 출력 db -->
	<select id="getStore" resultType="com.common.www.dto.storeDTO">
		SELECT STORECODE , TEL ,
		LOCATION , INCOME
		FROM STORE
	</select>

	<!-- 상점 하나 조회 -->
	<select id="getStoreOne"
		resultType="com.common.www.dto.storeDTO" parameterType="java.lang.String">
		SELECT
		STORECODE ,
		LOCATION ,
		TEL ,
		INCOME
		FROM STORE
		WHERE storeCode =
		#{storeCode}
	</select>

	<!-- 상점 추가 -->
	<insert id="insertStore"
		parameterType="com.common.www.dto.storeDTO">
		INSERT INTO STORE
		VALUE(STORECODE,TEL,LOCATION)
		VALUES(#{storeCode} , #{tel} ,#{location})
	</insert>

	<update id="updateStore"
		parameterType="com.common.www.dto.storeDTO">
		UPDATE STORE SET LOCATION = #{location} ,TEL
		= #{tel}
		WHERE
		STORECODE =#{storeCode}
	</update>

	<!-- 상점 삭제 -->
	<delete id="deleteStore" parameterType="java.lang.String">
		DELETE STORE WHERE
		STORECODE =#{storeCode}
	</delete>

	<!-- -->

	<!-- Employee -->

	<!-- 사원 상점별 조회 -->
	<select id="getEmployee"
		resultType="com.common.www.dto.employeeDTO" parameterType="java.lang.String">
		SELECT
		STORECODE , MANAGER , PHONE , SEQTIME
		FROM EMPLOYEE
		WHERE STORECODE =
		#{storeCode}
	</select>

	<!-- 사원 입력 -->
	<insert id="insertEmployee"
		parameterType="com.common.www.dto.employeeDTO">
		INSERT INTO EMPLOYEE
		VALUE(STORECODE,MANAGER,PHONE,SEQTIME)
		VALUES(#{storeCode},#{manager},#{phone},#{seqTime})
	</insert>

	<delete id="deleteEmployee" parameterType="java.lang.String">
		DELETE EMPLOYEE WHERE
		PHONE =#{phone}
	</delete>

	<!-- -->

</mapper>